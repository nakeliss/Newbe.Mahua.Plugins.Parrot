/* 
 * Newbe.Mahua.HttpApi
 *
 * this is http api document for Newbe.Mahua. You can get some help from http://www.newbe.pro
 *
 * OpenAPI spec version: v1
 * Contact: 472158246@qq.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Newbe.Mahua.HttpApiClient.Client.SwaggerDateConverter;

namespace Newbe.Mahua.HttpApiClient.Model
{
    /// <summary>
    /// QQLightApiSetAnonyHttpInput
    /// </summary>
    [DataContract]
    public partial class QQLightApiSetAnonyHttpInput :  IEquatable<QQLightApiSetAnonyHttpInput>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QQLightApiSetAnonyHttpInput" /> class.
        /// </summary>
        /// <param name="群号">群号.</param>
        /// <param name="是否允许匿名聊天">是否允许匿名聊天.</param>
        public QQLightApiSetAnonyHttpInput(string 群号 = default(string), bool? 是否允许匿名聊天 = default(bool?))
        {
            this.群号 = 群号;
            this.是否允许匿名聊天 = 是否允许匿名聊天;
        }
        
        /// <summary>
        /// Gets or Sets 群号
        /// </summary>
        [DataMember(Name="群号", EmitDefaultValue=false)]
        public string 群号 { get; set; }

        /// <summary>
        /// Gets or Sets 是否允许匿名聊天
        /// </summary>
        [DataMember(Name="是否允许匿名聊天", EmitDefaultValue=false)]
        public bool? 是否允许匿名聊天 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class QQLightApiSetAnonyHttpInput {\n");
            sb.Append("  群号: ").Append(群号).Append("\n");
            sb.Append("  是否允许匿名聊天: ").Append(是否允许匿名聊天).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QQLightApiSetAnonyHttpInput);
        }

        /// <summary>
        /// Returns true if QQLightApiSetAnonyHttpInput instances are equal
        /// </summary>
        /// <param name="input">Instance of QQLightApiSetAnonyHttpInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QQLightApiSetAnonyHttpInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.群号 == input.群号 ||
                    (this.群号 != null &&
                    this.群号.Equals(input.群号))
                ) && 
                (
                    this.是否允许匿名聊天 == input.是否允许匿名聊天 ||
                    (this.是否允许匿名聊天 != null &&
                    this.是否允许匿名聊天.Equals(input.是否允许匿名聊天))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.群号 != null)
                    hashCode = hashCode * 59 + this.群号.GetHashCode();
                if (this.是否允许匿名聊天 != null)
                    hashCode = hashCode * 59 + this.是否允许匿名聊天.GetHashCode();
                return hashCode;
            }
        }

    }

}
