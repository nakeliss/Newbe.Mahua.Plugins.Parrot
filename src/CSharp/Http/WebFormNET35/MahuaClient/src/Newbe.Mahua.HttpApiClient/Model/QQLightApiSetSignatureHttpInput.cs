/* 
 * Newbe.Mahua.HttpApi
 *
 * this is http api document for Newbe.Mahua. You can get some help from http://www.newbe.pro
 *
 * OpenAPI spec version: v1
 * Contact: 472158246@qq.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Newbe.Mahua.HttpApiClient.Client.SwaggerDateConverter;

namespace Newbe.Mahua.HttpApiClient.Model
{
    /// <summary>
    /// QQLightApiSetSignatureHttpInput
    /// </summary>
    [DataContract]
    public partial class QQLightApiSetSignatureHttpInput :  IEquatable<QQLightApiSetSignatureHttpInput>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QQLightApiSetSignatureHttpInput" /> class.
        /// </summary>
        /// <param name="个性签名">个性签名.</param>
        public QQLightApiSetSignatureHttpInput(string 个性签名 = default(string))
        {
            this.个性签名 = 个性签名;
        }
        
        /// <summary>
        /// Gets or Sets 个性签名
        /// </summary>
        [DataMember(Name="个性签名", EmitDefaultValue=false)]
        public string 个性签名 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class QQLightApiSetSignatureHttpInput {\n");
            sb.Append("  个性签名: ").Append(个性签名).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QQLightApiSetSignatureHttpInput);
        }

        /// <summary>
        /// Returns true if QQLightApiSetSignatureHttpInput instances are equal
        /// </summary>
        /// <param name="input">Instance of QQLightApiSetSignatureHttpInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QQLightApiSetSignatureHttpInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.个性签名 == input.个性签名 ||
                    (this.个性签名 != null &&
                    this.个性签名.Equals(input.个性签名))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.个性签名 != null)
                    hashCode = hashCode * 59 + this.个性签名.GetHashCode();
                return hashCode;
            }
        }

    }

}
