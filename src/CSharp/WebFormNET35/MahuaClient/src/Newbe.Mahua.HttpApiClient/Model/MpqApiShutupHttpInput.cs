/* 
 * Newbe.Mahua.HttpApi
 *
 * this is http api document for Newbe.Mahua. You can get some help from http://www.newbe.pro
 *
 * OpenAPI spec version: v1
 * Contact: 472158246@qq.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Newbe.Mahua.HttpApiClient.Client.SwaggerDateConverter;

namespace Newbe.Mahua.HttpApiClient.Model
{
    /// <summary>
    /// 禁言群成员&#x60;
    /// </summary>
    [DataContract]
    public partial class MpqApiShutupHttpInput :  IEquatable<MpqApiShutupHttpInput>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MpqApiShutupHttpInput" /> class.
        /// </summary>
        /// <param name="响应的QQ">响应的QQ.</param>
        /// <param name="群号">禁言对象所在群..</param>
        /// <param name="qq">禁言对象.留空为全群禁言.</param>
        /// <param name="时长">单位:秒 最大为1个月. 为零解除对象或全群禁言.</param>
        public MpqApiShutupHttpInput(string 响应的QQ = default(string), string 群号 = default(string), string qq = default(string), int? 时长 = default(int?))
        {
            this.响应的QQ = 响应的QQ;
            this.群号 = 群号;
            this.Qq = qq;
            this.时长 = 时长;
        }
        
        /// <summary>
        /// Gets or Sets 响应的QQ
        /// </summary>
        [DataMember(Name="响应的QQ", EmitDefaultValue=false)]
        public string 响应的QQ { get; set; }

        /// <summary>
        /// 禁言对象所在群.
        /// </summary>
        /// <value>禁言对象所在群.</value>
        [DataMember(Name="群号", EmitDefaultValue=false)]
        public string 群号 { get; set; }

        /// <summary>
        /// 禁言对象.留空为全群禁言
        /// </summary>
        /// <value>禁言对象.留空为全群禁言</value>
        [DataMember(Name="qq", EmitDefaultValue=false)]
        public string Qq { get; set; }

        /// <summary>
        /// 单位:秒 最大为1个月. 为零解除对象或全群禁言
        /// </summary>
        /// <value>单位:秒 最大为1个月. 为零解除对象或全群禁言</value>
        [DataMember(Name="时长", EmitDefaultValue=false)]
        public int? 时长 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MpqApiShutupHttpInput {\n");
            sb.Append("  响应的QQ: ").Append(响应的QQ).Append("\n");
            sb.Append("  群号: ").Append(群号).Append("\n");
            sb.Append("  Qq: ").Append(Qq).Append("\n");
            sb.Append("  时长: ").Append(时长).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MpqApiShutupHttpInput);
        }

        /// <summary>
        /// Returns true if MpqApiShutupHttpInput instances are equal
        /// </summary>
        /// <param name="input">Instance of MpqApiShutupHttpInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MpqApiShutupHttpInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.响应的QQ == input.响应的QQ ||
                    (this.响应的QQ != null &&
                    this.响应的QQ.Equals(input.响应的QQ))
                ) && 
                (
                    this.群号 == input.群号 ||
                    (this.群号 != null &&
                    this.群号.Equals(input.群号))
                ) && 
                (
                    this.Qq == input.Qq ||
                    (this.Qq != null &&
                    this.Qq.Equals(input.Qq))
                ) && 
                (
                    this.时长 == input.时长 ||
                    (this.时长 != null &&
                    this.时长.Equals(input.时长))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.响应的QQ != null)
                    hashCode = hashCode * 59 + this.响应的QQ.GetHashCode();
                if (this.群号 != null)
                    hashCode = hashCode * 59 + this.群号.GetHashCode();
                if (this.Qq != null)
                    hashCode = hashCode * 59 + this.Qq.GetHashCode();
                if (this.时长 != null)
                    hashCode = hashCode * 59 + this.时长.GetHashCode();
                return hashCode;
            }
        }

    }

}
