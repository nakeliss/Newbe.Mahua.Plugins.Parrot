/* 
 * Newbe.Mahua.HttpApi
 *
 * this is http api document for Newbe.Mahua. You can get some help from http://www.newbe.pro
 *
 * OpenAPI spec version: v1
 * Contact: 472158246@qq.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using Newbe.Mahua.HttpApiClient.Client;
using Newbe.Mahua.HttpApiClient.Model;

namespace Newbe.Mahua.HttpApiClient.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICqpApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 增加运行日志
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQAddLog (CqpCQAddLogHttpInput input = null);

        /// <summary>
        /// 增加运行日志
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQAddLogWithHttpInfo (CqpCQAddLogHttpInput input = null);
        /// <summary>
        /// 撤回消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQDeleteMsg (CqpCQDeleteMsgHttpInput input = null);

        /// <summary>
        /// 撤回消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQDeleteMsgWithHttpInfo (CqpCQDeleteMsgHttpInput input = null);
        /// <summary>
        /// 取应用目录
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetAppDirectory (CqpCQGetAppDirectoryHttpInput input = null);

        /// <summary>
        /// 取应用目录
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetAppDirectoryWithHttpInfo (CqpCQGetAppDirectoryHttpInput input = null);
        /// <summary>
        /// 取Cookies(慎用
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetCookies (CqpCQGetCookiesHttpInput input = null);

        /// <summary>
        /// 取Cookies(慎用
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetCookiesWithHttpInfo (CqpCQGetCookiesHttpInput input = null);
        /// <summary>
        /// 取CsrfToken(慎用
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetCsrfToken (CqpCQGetCsrfTokenHttpInput input = null);

        /// <summary>
        /// 取CsrfToken(慎用
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetCsrfTokenWithHttpInfo (CqpCQGetCsrfTokenHttpInput input = null);
        /// <summary>
        /// 取群列表
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetGroupList (CqpCQGetGroupListHttpInput input = null);

        /// <summary>
        /// 取群列表
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetGroupListWithHttpInfo (CqpCQGetGroupListHttpInput input = null);
        /// <summary>
        /// 取群成员信息(支持缓存)
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetGroupMemberInfoV2 (CqpCQGetGroupMemberInfoV2HttpInput input = null);

        /// <summary>
        /// 取群成员信息(支持缓存)
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetGroupMemberInfoV2WithHttpInfo (CqpCQGetGroupMemberInfoV2HttpInput input = null);
        /// <summary>
        /// 取群成员列表
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetGroupMemberList (CqpCQGetGroupMemberListHttpInput input = null);

        /// <summary>
        /// 取群成员列表
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetGroupMemberListWithHttpInfo (CqpCQGetGroupMemberListHttpInput input = null);
        /// <summary>
        /// 取登录昵称
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetLoginNick (CqpCQGetLoginNickHttpInput input = null);

        /// <summary>
        /// 取登录昵称
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetLoginNickWithHttpInfo (CqpCQGetLoginNickHttpInput input = null);
        /// <summary>
        /// 取登录QQ
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetLoginQQ (CqpCQGetLoginQQHttpInput input = null);

        /// <summary>
        /// 取登录QQ
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetLoginQQWithHttpInfo (CqpCQGetLoginQQHttpInput input = null);
        /// <summary>
        /// 接收语音
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetRecord (CqpCQGetRecordHttpInput input = null);

        /// <summary>
        /// 接收语音
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetRecordWithHttpInfo (CqpCQGetRecordHttpInput input = null);
        /// <summary>
        /// 取陌生人信息(支持缓存)
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQGetStrangerInfo (CqpCQGetStrangerInfoHttpInput input = null);

        /// <summary>
        /// 取陌生人信息(支持缓存)
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQGetStrangerInfoWithHttpInfo (CqpCQGetStrangerInfoHttpInput input = null);
        /// <summary>
        /// 发送讨论组消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSendDiscussMsg (CqpCQSendDiscussMsgHttpInput input = null);

        /// <summary>
        /// 发送讨论组消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSendDiscussMsgWithHttpInfo (CqpCQSendDiscussMsgHttpInput input = null);
        /// <summary>
        /// 发送群消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSendGroupMsg (CqpCQSendGroupMsgHttpInput input = null);

        /// <summary>
        /// 发送群消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSendGroupMsgWithHttpInfo (CqpCQSendGroupMsgHttpInput input = null);
        /// <summary>
        /// 发送赞
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSendLikeV2 (CqpCQSendLikeV2HttpInput input = null);

        /// <summary>
        /// 发送赞
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSendLikeV2WithHttpInfo (CqpCQSendLikeV2HttpInput input = null);
        /// <summary>
        /// 发送好友消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSendPrivateMsg (CqpCQSendPrivateMsgHttpInput input = null);

        /// <summary>
        /// 发送好友消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSendPrivateMsgWithHttpInfo (CqpCQSendPrivateMsgHttpInput input = null);
        /// <summary>
        /// 置讨论组退出
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetDiscussLeave (CqpCQSetDiscussLeaveHttpInput input = null);

        /// <summary>
        /// 置讨论组退出
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetDiscussLeaveWithHttpInfo (CqpCQSetDiscussLeaveHttpInput input = null);
        /// <summary>
        /// 置致命错误提示
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetFatal (CqpCQSetFatalHttpInput input = null);

        /// <summary>
        /// 置致命错误提示
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetFatalWithHttpInfo (CqpCQSetFatalHttpInput input = null);
        /// <summary>
        /// 置好友添加请求
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetFriendAddRequest (CqpCQSetFriendAddRequestHttpInput input = null);

        /// <summary>
        /// 置好友添加请求
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetFriendAddRequestWithHttpInfo (CqpCQSetFriendAddRequestHttpInput input = null);
        /// <summary>
        /// 置群添加请求
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupAddRequestV2 (CqpCQSetGroupAddRequestV2HttpInput input = null);

        /// <summary>
        /// 置群添加请求
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupAddRequestV2WithHttpInfo (CqpCQSetGroupAddRequestV2HttpInput input = null);
        /// <summary>
        /// 置群管理员
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupAdmin (CqpCQSetGroupAdminHttpInput input = null);

        /// <summary>
        /// 置群管理员
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupAdminWithHttpInfo (CqpCQSetGroupAdminHttpInput input = null);
        /// <summary>
        /// 置群匿名设置
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupAnonymous (CqpCQSetGroupAnonymousHttpInput input = null);

        /// <summary>
        /// 置群匿名设置
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupAnonymousWithHttpInfo (CqpCQSetGroupAnonymousHttpInput input = null);
        /// <summary>
        /// 置匿名群员禁言
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupAnonymousBan (CqpCQSetGroupAnonymousBanHttpInput input = null);

        /// <summary>
        /// 置匿名群员禁言
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupAnonymousBanWithHttpInfo (CqpCQSetGroupAnonymousBanHttpInput input = null);
        /// <summary>
        /// 置群员禁言
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupBan (CqpCQSetGroupBanHttpInput input = null);

        /// <summary>
        /// 置群员禁言
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupBanWithHttpInfo (CqpCQSetGroupBanHttpInput input = null);
        /// <summary>
        /// 置群成员名片
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupCard (CqpCQSetGroupCardHttpInput input = null);

        /// <summary>
        /// 置群成员名片
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupCardWithHttpInfo (CqpCQSetGroupCardHttpInput input = null);
        /// <summary>
        /// 置群员移除
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupKick (CqpCQSetGroupKickHttpInput input = null);

        /// <summary>
        /// 置群员移除
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupKickWithHttpInfo (CqpCQSetGroupKickHttpInput input = null);
        /// <summary>
        /// 置群退出
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupLeave (CqpCQSetGroupLeaveHttpInput input = null);

        /// <summary>
        /// 置群退出
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupLeaveWithHttpInfo (CqpCQSetGroupLeaveHttpInput input = null);
        /// <summary>
        /// 置群成员专属头衔
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupSpecialTitle (CqpCQSetGroupSpecialTitleHttpInput input = null);

        /// <summary>
        /// 置群成员专属头衔
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupSpecialTitleWithHttpInfo (CqpCQSetGroupSpecialTitleHttpInput input = null);
        /// <summary>
        /// 置全群禁言
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        void Apiv1CqpCQSetGroupWholeBan (CqpCQSetGroupWholeBanHttpInput input = null);

        /// <summary>
        /// 置全群禁言
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> Apiv1CqpCQSetGroupWholeBanWithHttpInfo (CqpCQSetGroupWholeBanHttpInput input = null);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class CqpApi : ICqpApi
    {
        private Newbe.Mahua.HttpApiClient.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="CqpApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CqpApi(String basePath)
        {
            this.Configuration = new Newbe.Mahua.HttpApiClient.Client.Configuration { BasePath = basePath };

            ExceptionFactory = Newbe.Mahua.HttpApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CqpApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CqpApi(Newbe.Mahua.HttpApiClient.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Newbe.Mahua.HttpApiClient.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = Newbe.Mahua.HttpApiClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Newbe.Mahua.HttpApiClient.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Newbe.Mahua.HttpApiClient.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new Dictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// 增加运行日志 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQAddLog (CqpCQAddLogHttpInput input = null)
        {
             Apiv1CqpCQAddLogWithHttpInfo(input);
        }

        /// <summary>
        /// 增加运行日志 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQAddLogWithHttpInfo (CqpCQAddLogHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_addLog";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQAddLog", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 撤回消息 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQDeleteMsg (CqpCQDeleteMsgHttpInput input = null)
        {
             Apiv1CqpCQDeleteMsgWithHttpInfo(input);
        }

        /// <summary>
        /// 撤回消息 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQDeleteMsgWithHttpInfo (CqpCQDeleteMsgHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_deleteMsg";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQDeleteMsg", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 取应用目录 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetAppDirectory (CqpCQGetAppDirectoryHttpInput input = null)
        {
             Apiv1CqpCQGetAppDirectoryWithHttpInfo(input);
        }

        /// <summary>
        /// 取应用目录 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetAppDirectoryWithHttpInfo (CqpCQGetAppDirectoryHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getAppDirectory";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetAppDirectory", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 取Cookies(慎用 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetCookies (CqpCQGetCookiesHttpInput input = null)
        {
             Apiv1CqpCQGetCookiesWithHttpInfo(input);
        }

        /// <summary>
        /// 取Cookies(慎用 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetCookiesWithHttpInfo (CqpCQGetCookiesHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getCookies";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetCookies", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 取CsrfToken(慎用 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetCsrfToken (CqpCQGetCsrfTokenHttpInput input = null)
        {
             Apiv1CqpCQGetCsrfTokenWithHttpInfo(input);
        }

        /// <summary>
        /// 取CsrfToken(慎用 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetCsrfTokenWithHttpInfo (CqpCQGetCsrfTokenHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getCsrfToken";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetCsrfToken", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 取群列表 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetGroupList (CqpCQGetGroupListHttpInput input = null)
        {
             Apiv1CqpCQGetGroupListWithHttpInfo(input);
        }

        /// <summary>
        /// 取群列表 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetGroupListWithHttpInfo (CqpCQGetGroupListHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getGroupList";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetGroupList", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 取群成员信息(支持缓存) 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetGroupMemberInfoV2 (CqpCQGetGroupMemberInfoV2HttpInput input = null)
        {
             Apiv1CqpCQGetGroupMemberInfoV2WithHttpInfo(input);
        }

        /// <summary>
        /// 取群成员信息(支持缓存) 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetGroupMemberInfoV2WithHttpInfo (CqpCQGetGroupMemberInfoV2HttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getGroupMemberInfoV2";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetGroupMemberInfoV2", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 取群成员列表 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetGroupMemberList (CqpCQGetGroupMemberListHttpInput input = null)
        {
             Apiv1CqpCQGetGroupMemberListWithHttpInfo(input);
        }

        /// <summary>
        /// 取群成员列表 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetGroupMemberListWithHttpInfo (CqpCQGetGroupMemberListHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getGroupMemberList";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetGroupMemberList", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 取登录昵称 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetLoginNick (CqpCQGetLoginNickHttpInput input = null)
        {
             Apiv1CqpCQGetLoginNickWithHttpInfo(input);
        }

        /// <summary>
        /// 取登录昵称 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetLoginNickWithHttpInfo (CqpCQGetLoginNickHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getLoginNick";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetLoginNick", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 取登录QQ 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetLoginQQ (CqpCQGetLoginQQHttpInput input = null)
        {
             Apiv1CqpCQGetLoginQQWithHttpInfo(input);
        }

        /// <summary>
        /// 取登录QQ 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetLoginQQWithHttpInfo (CqpCQGetLoginQQHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getLoginQQ";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetLoginQQ", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 接收语音 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetRecord (CqpCQGetRecordHttpInput input = null)
        {
             Apiv1CqpCQGetRecordWithHttpInfo(input);
        }

        /// <summary>
        /// 接收语音 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetRecordWithHttpInfo (CqpCQGetRecordHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getRecord";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetRecord", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 取陌生人信息(支持缓存) 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQGetStrangerInfo (CqpCQGetStrangerInfoHttpInput input = null)
        {
             Apiv1CqpCQGetStrangerInfoWithHttpInfo(input);
        }

        /// <summary>
        /// 取陌生人信息(支持缓存) 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQGetStrangerInfoWithHttpInfo (CqpCQGetStrangerInfoHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_getStrangerInfo";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQGetStrangerInfo", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 发送讨论组消息 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSendDiscussMsg (CqpCQSendDiscussMsgHttpInput input = null)
        {
             Apiv1CqpCQSendDiscussMsgWithHttpInfo(input);
        }

        /// <summary>
        /// 发送讨论组消息 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSendDiscussMsgWithHttpInfo (CqpCQSendDiscussMsgHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_sendDiscussMsg";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSendDiscussMsg", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 发送群消息 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSendGroupMsg (CqpCQSendGroupMsgHttpInput input = null)
        {
             Apiv1CqpCQSendGroupMsgWithHttpInfo(input);
        }

        /// <summary>
        /// 发送群消息 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSendGroupMsgWithHttpInfo (CqpCQSendGroupMsgHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_sendGroupMsg";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSendGroupMsg", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 发送赞 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSendLikeV2 (CqpCQSendLikeV2HttpInput input = null)
        {
             Apiv1CqpCQSendLikeV2WithHttpInfo(input);
        }

        /// <summary>
        /// 发送赞 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSendLikeV2WithHttpInfo (CqpCQSendLikeV2HttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_sendLikeV2";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSendLikeV2", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 发送好友消息 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSendPrivateMsg (CqpCQSendPrivateMsgHttpInput input = null)
        {
             Apiv1CqpCQSendPrivateMsgWithHttpInfo(input);
        }

        /// <summary>
        /// 发送好友消息 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSendPrivateMsgWithHttpInfo (CqpCQSendPrivateMsgHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_sendPrivateMsg";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSendPrivateMsg", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置讨论组退出 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetDiscussLeave (CqpCQSetDiscussLeaveHttpInput input = null)
        {
             Apiv1CqpCQSetDiscussLeaveWithHttpInfo(input);
        }

        /// <summary>
        /// 置讨论组退出 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetDiscussLeaveWithHttpInfo (CqpCQSetDiscussLeaveHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setDiscussLeave";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetDiscussLeave", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置致命错误提示 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetFatal (CqpCQSetFatalHttpInput input = null)
        {
             Apiv1CqpCQSetFatalWithHttpInfo(input);
        }

        /// <summary>
        /// 置致命错误提示 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetFatalWithHttpInfo (CqpCQSetFatalHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setFatal";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetFatal", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置好友添加请求 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetFriendAddRequest (CqpCQSetFriendAddRequestHttpInput input = null)
        {
             Apiv1CqpCQSetFriendAddRequestWithHttpInfo(input);
        }

        /// <summary>
        /// 置好友添加请求 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetFriendAddRequestWithHttpInfo (CqpCQSetFriendAddRequestHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setFriendAddRequest";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetFriendAddRequest", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置群添加请求 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupAddRequestV2 (CqpCQSetGroupAddRequestV2HttpInput input = null)
        {
             Apiv1CqpCQSetGroupAddRequestV2WithHttpInfo(input);
        }

        /// <summary>
        /// 置群添加请求 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupAddRequestV2WithHttpInfo (CqpCQSetGroupAddRequestV2HttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupAddRequestV2";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupAddRequestV2", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置群管理员 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupAdmin (CqpCQSetGroupAdminHttpInput input = null)
        {
             Apiv1CqpCQSetGroupAdminWithHttpInfo(input);
        }

        /// <summary>
        /// 置群管理员 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupAdminWithHttpInfo (CqpCQSetGroupAdminHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupAdmin";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupAdmin", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置群匿名设置 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupAnonymous (CqpCQSetGroupAnonymousHttpInput input = null)
        {
             Apiv1CqpCQSetGroupAnonymousWithHttpInfo(input);
        }

        /// <summary>
        /// 置群匿名设置 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupAnonymousWithHttpInfo (CqpCQSetGroupAnonymousHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupAnonymous";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupAnonymous", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置匿名群员禁言 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupAnonymousBan (CqpCQSetGroupAnonymousBanHttpInput input = null)
        {
             Apiv1CqpCQSetGroupAnonymousBanWithHttpInfo(input);
        }

        /// <summary>
        /// 置匿名群员禁言 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupAnonymousBanWithHttpInfo (CqpCQSetGroupAnonymousBanHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupAnonymousBan";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupAnonymousBan", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置群员禁言 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupBan (CqpCQSetGroupBanHttpInput input = null)
        {
             Apiv1CqpCQSetGroupBanWithHttpInfo(input);
        }

        /// <summary>
        /// 置群员禁言 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupBanWithHttpInfo (CqpCQSetGroupBanHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupBan";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupBan", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置群成员名片 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupCard (CqpCQSetGroupCardHttpInput input = null)
        {
             Apiv1CqpCQSetGroupCardWithHttpInfo(input);
        }

        /// <summary>
        /// 置群成员名片 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupCardWithHttpInfo (CqpCQSetGroupCardHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupCard";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupCard", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置群员移除 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupKick (CqpCQSetGroupKickHttpInput input = null)
        {
             Apiv1CqpCQSetGroupKickWithHttpInfo(input);
        }

        /// <summary>
        /// 置群员移除 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupKickWithHttpInfo (CqpCQSetGroupKickHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupKick";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupKick", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置群退出 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupLeave (CqpCQSetGroupLeaveHttpInput input = null)
        {
             Apiv1CqpCQSetGroupLeaveWithHttpInfo(input);
        }

        /// <summary>
        /// 置群退出 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupLeaveWithHttpInfo (CqpCQSetGroupLeaveHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupLeave";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupLeave", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置群成员专属头衔 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupSpecialTitle (CqpCQSetGroupSpecialTitleHttpInput input = null)
        {
             Apiv1CqpCQSetGroupSpecialTitleWithHttpInfo(input);
        }

        /// <summary>
        /// 置群成员专属头衔 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupSpecialTitleWithHttpInfo (CqpCQSetGroupSpecialTitleHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupSpecialTitle";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupSpecialTitle", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// 置全群禁言 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns></returns>
        public void Apiv1CqpCQSetGroupWholeBan (CqpCQSetGroupWholeBanHttpInput input = null)
        {
             Apiv1CqpCQSetGroupWholeBanWithHttpInfo(input);
        }

        /// <summary>
        /// 置全群禁言 
        /// </summary>
        /// <exception cref="Newbe.Mahua.HttpApiClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="input"> (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> Apiv1CqpCQSetGroupWholeBanWithHttpInfo (CqpCQSetGroupWholeBanHttpInput input = null)
        {

            var localVarPath = "/api/v1/Cqp/CQ_setGroupWholeBan";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/_*+json"
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (input != null && input.GetType() != typeof(byte[]))
            {
                localVarPostBody = this.Configuration.ApiClient.Serialize(input); // http body (model) parameter
            }
            else
            {
                localVarPostBody = input; // byte array
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Apiv1CqpCQSetGroupWholeBan", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

    }
}
